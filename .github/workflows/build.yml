name: PlatformIO CI
on: [push]
jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                environment: [esp32]
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - name: Cache pip
              uses: actions/cache@v2
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-
            - name: Cache PlatformIO
              uses: actions/cache@v2
              with:
                  path: ~/.platformio
                  key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
            - name: Set up Python
              uses: actions/setup-python@v2
            - name: Install PlatformIO
              run: |
                  python -m pip install --upgrade pip
                  pip install --upgrade platformio
            - name: Build application (${{matrix.environment}})
              if: matrix.environment != 'native'
              run: pio run --environment ${{matrix.environment}}
            - name: Rename firmware artifact
              if: matrix.environment != 'native'
              run: cp ${{ github.workspace }}/.pio/build/${{ matrix.environment }}/firmware.bin firmware-${{ matrix.environment }}.bin
            - name: Upload firmware artifact
              if: matrix.environment != 'native'
              uses: "actions/upload-artifact@v2"
              with:
                  path: firmware-${{ matrix.environment }}.bin
                  if-no-files-found: error
            # - name: Install native platform
            #   if: matrix.environment == 'native'
            #   run: |
            #       # Required before PlatformIO 5.2.0 - https://github.com/platformio/platformio-core/issues/3901
            #       pio platform install native
            # - name: Run unit tests
            #   if: matrix.environment == 'native'
            #   run: pio test --environment native
    release:
        needs: build
        if: startsWith(github.ref, 'refs/tags/')
        runs-on: ubuntu-latest
        steps:
            - name: Download artifacts
              uses: actions/download-artifact@v2
            - name: Display structure of downloaded files
              run: ls -R
            - name: Release
              uses: softprops/action-gh-release@v1
              with:
                  files: artifact/*
    ready-to-merge:
        needs: build
        if: ${{ github.ref != 'refs/heads/main' }}
        runs-on: ubuntu-latest
        steps:
            - name: Dummy
              run: echo "Everything is green across the board on ${{ github.ref }}"
